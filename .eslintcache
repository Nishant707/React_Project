[{"/Users/nishant/Desktop/01-starting-project/src/index.js":"1","/Users/nishant/Desktop/01-starting-project/src/App.js":"2","/Users/nishant/Desktop/01-starting-project/src/components/SimpleInput.js":"3","/Users/nishant/Desktop/01-starting-project/src/components/BasicForm.js":"4","/Users/nishant/Desktop/01-starting-project/src/components/staff/NurseComponent.jsx":"5","/Users/nishant/Desktop/01-starting-project/src/components/staff/DoctorComponent.jsx":"6","/Users/nishant/Desktop/01-starting-project/src/components/staff/WardBoyComponent.jsx":"7","/Users/nishant/Desktop/01-starting-project/src/components/staff/staffComponent.jsx":"8","/Users/nishant/Desktop/01-starting-project/src/components/staff/StaffComponent.jsx":"9","/Users/nishant/Desktop/01-starting-project/src/components/Patient/OpdPatientComponent.jsx":"10","/Users/nishant/Desktop/01-starting-project/src/components/ReusableComponent/ListComponent.jsx":"11","/Users/nishant/Desktop/01-starting-project/src/components/Patient/PatientListComponent.jsx":"12","/Users/nishant/Desktop/01-starting-project/src/components/RoomWard/ShowRoomWardComponent.jsx":"13","/Users/nishant/Desktop/01-starting-project/src/components/RoomWard/WardComponent.jsx":"14","/Users/nishant/Desktop/01-starting-project/src/components/RoomWard/RoomComponent.jsx":"15","/Users/nishant/Desktop/01-starting-project/src/components/Patient/ModalComponent.jsx":"16","/Users/nishant/Desktop/01-starting-project/src/components/IPDPatientsList/IPDPatientsList.jsx":"17","/Users/nishant/Desktop/01-starting-project/src/components/IPDPatientsList/AddMedicineForm.jsx":"18","/Users/nishant/Desktop/01-starting-project/src/components/IPDPatientsList/Dischargedpatient.jsx":"19","/Users/nishant/Desktop/01-starting-project/src/components/IPDPatientsList/AddFoodForm.jsx":"20","/Users/nishant/Desktop/01-starting-project/src/components/Reports/Reports.jsx":"21","/Users/nishant/Desktop/01-starting-project/src/components/Reports/DoctorByTypeComp.jsx":"22","/Users/nishant/Desktop/01-starting-project/src/components/Reports/PatientByDoctorComp.jsx":"23","/Users/nishant/Desktop/01-starting-project/src/components/Reports/DoctorBySpecComp.jsx":"24","/Users/nishant/Desktop/01-starting-project/src/components/Reports/PatientByWardComp.jsx":"25"},{"size":241,"mtime":1664006780615,"results":"26","hashOfConfig":"27"},{"size":2377,"mtime":1664008909304,"results":"28","hashOfConfig":"27"},{"size":324,"mtime":1648643101000,"results":"29","hashOfConfig":"27"},{"size":669,"mtime":1648643101000,"results":"30","hashOfConfig":"27"},{"size":1969,"mtime":1664016194106,"results":"31","hashOfConfig":"27"},{"size":2974,"mtime":1664017455191,"results":"32","hashOfConfig":"27"},{"size":869,"mtime":1663258722600,"results":"33","hashOfConfig":"27"},{"size":1313,"mtime":1663263111252,"results":"34","hashOfConfig":"27"},{"size":6018,"mtime":1664015707440,"results":"35","hashOfConfig":"27"},{"size":9524,"mtime":1663666384321,"results":"36","hashOfConfig":"27"},{"size":578,"mtime":1663667717060,"results":"37","hashOfConfig":"27"},{"size":1474,"mtime":1664014658612,"results":"38","hashOfConfig":"27"},{"size":3482,"mtime":1663608458633,"results":"39","hashOfConfig":"27"},{"size":1259,"mtime":1663667840325,"results":"40","hashOfConfig":"27"},{"size":2304,"mtime":1663612674163,"results":"41","hashOfConfig":"27"},{"size":4149,"mtime":1663666384320,"results":"42","hashOfConfig":"27"},{"size":5017,"mtime":1664014941783,"results":"43","hashOfConfig":"27"},{"size":5526,"mtime":1664015205176,"results":"44","hashOfConfig":"27"},{"size":6144,"mtime":1663658787540,"results":"45","hashOfConfig":"27"},{"size":4473,"mtime":1664015213582,"results":"46","hashOfConfig":"27"},{"size":2046,"mtime":1663657208000,"results":"47","hashOfConfig":"27"},{"size":2118,"mtime":1664015331918,"results":"48","hashOfConfig":"27"},{"size":2455,"mtime":1664015343546,"results":"49","hashOfConfig":"27"},{"size":2183,"mtime":1664015475970,"results":"50","hashOfConfig":"27"},{"size":2848,"mtime":1664015475970,"results":"51","hashOfConfig":"27"},{"filePath":"52","messages":"53","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"jvebet",{"filePath":"54","messages":"55","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"56","messages":"57","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"59","messages":"60","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"61","messages":"62","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"63","messages":"64","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"65","messages":"66","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"67"},{"filePath":"68","messages":"69","errorCount":3,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"70","usedDeprecatedRules":"71"},{"filePath":"72","messages":"73","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"74","messages":"75","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"76","usedDeprecatedRules":"67"},{"filePath":"77","messages":"78","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"67"},{"filePath":"79","messages":"80","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"81","messages":"82","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"67"},{"filePath":"83","messages":"84","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"67"},{"filePath":"85","messages":"86","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"87","usedDeprecatedRules":"67"},{"filePath":"88","messages":"89","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"90","usedDeprecatedRules":"67"},{"filePath":"91","messages":"92","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"93","messages":"94","errorCount":0,"fatalErrorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"95","messages":"96","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"97","usedDeprecatedRules":"67"},{"filePath":"98","messages":"99","errorCount":0,"fatalErrorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"100","messages":"101","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"102","usedDeprecatedRules":"67"},{"filePath":"103","messages":"104","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"105","messages":"106","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"107","messages":"108","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"109","messages":"110","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/nishant/Desktop/01-starting-project/src/index.js",[],"/Users/nishant/Desktop/01-starting-project/src/App.js",["111"],"/Users/nishant/Desktop/01-starting-project/src/components/SimpleInput.js",[],["112","113"],"/Users/nishant/Desktop/01-starting-project/src/components/BasicForm.js",[],"/Users/nishant/Desktop/01-starting-project/src/components/staff/NurseComponent.jsx",[],"/Users/nishant/Desktop/01-starting-project/src/components/staff/DoctorComponent.jsx",["114"],"/Users/nishant/Desktop/01-starting-project/src/components/staff/WardBoyComponent.jsx",[],["115","116"],"/Users/nishant/Desktop/01-starting-project/src/components/staff/staffComponent.jsx",["117","118","119"],"import DoctorComponent from \"./DoctorComponent\";\nimport NurseComponent from \"./NurseComponent\";\nimport WardBoyComponent from \"./WardBoyComponent\";\nimport { useState } from \"react\";\n\n\nconst staffComponent=()=>{\n    const [isDoctorShown,setDoctorShown]=useState(false);\n    const [isNurseShown,setNurseShown]=useState(false);\n    const [isWardBoyShown,setWardBoyShown]=useState(false);\n  \n    const handleNurse=()=>{\n      setDoctorShown(false);\n      setWardBoyShown(false);\n      setNurseShown(current=>!current);\n    }\n    const handleDoctor=()=>{\n      setWardBoyShown(false);\n      setNurseShown(false);\n      setDoctorShown(current=>!current);\n    \n    }\n    const handleWardBoy=()=>{\n      setDoctorShown(false);\n      setNurseShown(false);\n      setWardBoyShown(current=>!current);\n    }\n   return(\n    <div className=\"app\">\n      <button onClick={handleDoctor}>\nDoctor\n      </button>\n      <button onClick={handleNurse}>\nNurse\n      </button>\n      <button onClick={handleWardBoy}>\nWardBoy\n      </button>\n    {isNurseShown && <NurseComponent/>}\n    {isDoctorShown && <DoctorComponent/>}\n    {isWardBoyShown && <WardBoyComponent/>}\n    </div>\n   );\n}\n\nexport default staffComponent;",["120","121"],"/Users/nishant/Desktop/01-starting-project/src/components/staff/StaffComponent.jsx",[],"/Users/nishant/Desktop/01-starting-project/src/components/Patient/OpdPatientComponent.jsx",["122","123","124","125","126"],"import { useState, useEffect } from \"react\";\nimport ModalComponent from \"./ModalComponent\";\n\nconst OpdPatientComponent = () => {\n  const [data, setData] = useState({\n    PatientId: 0,\n    FirstName: \"\",\n    LastName: \"\",\n    MiddleName: \"\",\n    Email: \"\",\n    MobileNo: 0,\n    Address: \"\",\n    isAdmitted: false,\n    AgeType: null,\n    DateOfBirth: 0,\n    Gender: \"\",\n    RoomId: null,\n    BillId: parseInt(Math.random() * 1000 + 1),\n    AssignedDoctorId: null,\n  });\n  const [Admitted, setisAdmitted] = useState(false);\n  const [modal, setModal] = useState(false);\n  const [roomList, SetroomList] = useState([]);\n  const [doctorList, SetdoctorList] = useState([]);\n\n  const handleAdmit = (e) => {\n    e.preventDefault();\n\n    setData({ ...data, isAdmitted: !Admitted });\n    if (!Admitted) {\n      e.target.style.backgroundColor = \"green\";\n    } else {\n      e.target.style.backgroundColor = \"#240370\";\n    }\n    setisAdmitted((current) => !current);\n  };\n\n  async function handleAPIPatient() {\n    const response2 = await fetch(process.env.REACT_APP_API + \"/Patient\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify(data),\n    });\n  }\n  async function getRooms() {\n    const response = await fetch(process.env.REACT_APP_API + \"/Room\");\n    const data = await response.json();\n    SetroomList(data);\n  }\n  async function getDoctors() {\n    const response = await fetch(process.env.REACT_APP_API + \"/Doctor\");\n    const data = await response.json();\n    SetdoctorList(data);\n  }\n\n  useEffect(() => {\n    getRooms();\n    getDoctors();\n  }, []);\n\n  async function handleAddOPD(event) {\n    event.preventDefault();\n    // let uniqueValue=new Date().valueOf();\n    // setData({...data,BillId:uniqueValue})\n    setTimeout(console.log(data), 5000);\n    setModal(true);\n    const response1 = await fetch(process.env.REACT_APP_API + \"/Bill\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify({\n        BillId: data.BillId,\n        OPD_Fees: 0,\n        Doctor_Fees: 0,\n        Other_Fees: 0,\n        Medicine_Fees: 0,\n        IPD_Advance_Fees: 0,\n        Total_Fees: 0,\n        CanteenCharges: 0,\n        RoomCharges: 0,\n      }),\n    });\n    handleAPIPatient();\n  }\n\n  async function handleAddIPD(event) {\n    event.preventDefault();\n    // let uniqueValue=new Date().valueOf();\n    // setData({...data,BillId:uniqueValue})\n    setTimeout(console.log(data), 5000);\n    setModal(true);\n    const response1 = await fetch(process.env.REACT_APP_API + \"/Bill\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify({\n        BillId: data.BillId,\n        OPD_Fees: 0,\n        Doctor_Fees: 500,\n        Other_Fees: 0,\n        Medicine_Fees: 0,\n        IPD_Advance_Fees: 200,\n        Total_Fees: 0,\n        CanteenCharges: 0,\n        RoomCharges: 0,\n      }),\n    });\n\n    handleAPIPatient();\n    // console.log(response);\n    // props.handleNewDoc();\n  }\n\n  const handleCalculate = (e) => {\n    e.preventDefault();\n    console.log(data);\n  };\n\n  const handleIPD = (e) => {\n    e.preventDefault();\n\n    console.log(data);\n  };\n  return (\n    <div>\n      {modal && (\n        <ModalComponent\n          setModal={setModal}\n          BillId={data.BillId}\n          DoctorId={data.DoctorId}\n          RoomId={data.RoomId}\n          IPD={data.isAdmitted}\n        />\n      )}\n\n      <form>\n        <div className=\"control-group\">\n          <div className=\"form-control\">\n            <label htmlFor=\"name\">Patient Id</label>\n            <input\n              type=\"number\"\n              id=\"PatientId\"\n              value={data.PatientId}\n              onChange={(e) =>\n                setData({ ...data, PatientId: parseInt(e.target.value) })\n              }\n            />\n          </div>\n          <div className=\"form-control\">\n            <label htmlFor=\"name\">First Name</label>\n            <input\n              type=\"text\"\n              id=\"firstname\"\n              value={data.FirstName}\n              onChange={(e) => setData({ ...data, FirstName: e.target.value })}\n            />\n          </div>\n          <div className=\"form-control\">\n            <label htmlFor=\"name\">Middle Name</label>\n            <input\n              type=\"text\"\n              id=\"middlename\"\n              value={data.MiddleName}\n              onChange={(e) => setData({ ...data, MiddleName: e.target.value })}\n            />\n          </div>\n          <div className=\"form-control\">\n            <label htmlFor=\"name\">Last Name</label>\n            <input\n              type=\"text\"\n              id=\"lastname\"\n              value={data.LastName}\n              onChange={(e) => setData({ ...data, LastName: e.target.value })}\n            />\n          </div>\n        </div>\n        <div className=\"form-control\">\n          <label htmlFor=\"name\">E-Mail Address</label>\n          <input\n            type=\"text\"\n            id=\"mail\"\n            value={data.Email}\n            onChange={(e) => setData({ ...data, Email: e.target.value })}\n          />\n        </div>\n        <div className=\"form-control\">\n          <label htmlFor=\"name\">Mobile Number</label>\n          <input\n            type=\"number\"\n            id=\"mobile\"\n            value={data.MobileNo}\n            onChange={(e) =>\n              setData({ ...data, MobileNo: parseInt(e.target.value) })\n            }\n          />\n        </div>\n        <div className=\"form-control\">\n          <label htmlFor=\"name\">Address</label>\n          <input\n            type=\"text\"\n            id=\"address\"\n            value={data.Address}\n            onChange={(e) => setData({ ...data, Address: e.target.value })}\n          />\n        </div>\n        <div className=\"form-control\">\n          <label htmlFor=\"name\">DOB</label>\n          <input\n            type=\"text\"\n            id=\"dob\"\n            value={data.DateOfBirth}\n            onChange={(e) => setData({ ...data, DateOfBirth: e.target.value })}\n          />\n        </div>\n        <div className=\"form-control\">\n          <label htmlFor=\"name\">Gender</label>\n          <input\n            type=\"text\"\n            id=\"gender\"\n            value={data.Gender}\n            onChange={(e) => setData({ ...data, Gender: e.target.value })}\n          />\n        </div>\n        {/* <div className='form-control'>\n            <label htmlFor='name'>Age Type</label>\n            <input type='text' id='age' value={data.AgeType} onChange={(e)=>setData({...data,AgeType:e.target.value})}/>\n          </div> */}\n        <div>\n          <div>\n            <label>Age Type: </label>\n            <select\n              onChange={(e) => setData({ ...data, AgeType: e.target.value })}\n            >\n              <option value=\"Major\">Major</option>\n              <option value=\"Minor\">Minor</option>\n              {/* <option value=\"103\">103</option>\n            <option value=\"111\">111</option>\n            <option value=\"1022\">1022</option> */}\n            </select>\n          </div>\n\n          <button onClick={(e) => handleAdmit(e)}>Admit To IPD</button>\n        </div>\n        <div>\n          {Admitted ? (\n            <div>\n              {/* <div className='form-control'>\n         <label htmlFor='name'>Room Id</label>\n         <input type='text' id='roomid' value={data.RoomId} onChange={(e)=>setData({...data,RoomId:e.target.value})}/>\n       </div> */}\n              {/* <div className='form-control'>\n         <label htmlFor='name'>Bill Id</label>\n         <input type='text' id='billid' value={data.BillId} onChange={(e)=>setData({...data,BillId:e.target.value})}/>\n       </div> */}\n              {/* <div className='form-control'>\n         <label htmlFor='name'>Doctor Assigned</label>\n         <input type='text' id='doctorAssigned' value={data.AssignedDoctor} onChange={(e)=>setData({...data,AssignedDoctor:e.target.value})}/>\n       </div> */}\n              <div>\n                <label>Room Id: </label>\n                <select\n                  onChange={(e) =>\n                    setData({ ...data, RoomId: parseInt(e.target.value) })\n                  }\n                >\n                  {roomList.map((e, idx) => {\n                    // console.log(e);\n                    return (\n                      <option key={idx} value={e.RoomId}>\n                        {e.Name}\n                      </option>\n                    );\n                  })}\n                  {/* <option value=\"111\">111</option>\n            <option value=\"1022\">1022</option> */}\n                </select>\n              </div>\n              <div>\n                <label>Doctor Assigned: </label>\n                <select\n                  onChange={(e) =>\n                    setData({\n                      ...data,\n                      AssignedDoctorId: parseInt(e.target.value),\n                    })\n                  }\n                >\n                  {doctorList.map((e, idx) => {\n                    // console.log(e);\n                    return (\n                      <option key={idx} value={e.DoctorId}>\n                        {e.Name}\n                      </option>\n                    );\n                  })}\n                </select>\n              </div>\n\n              <button onClick={(e) => handleAddIPD(e)}>Add IPD Patient</button>\n            </div>\n          ) : (\n            <button onClick={(e) => handleAddOPD(e)}>Add OPD Patient</button>\n          )}\n        </div>\n      </form>\n    </div>\n  );\n};\n\nexport default OpdPatientComponent;\n","/Users/nishant/Desktop/01-starting-project/src/components/ReusableComponent/ListComponent.jsx",[],"/Users/nishant/Desktop/01-starting-project/src/components/Patient/PatientListComponent.jsx",[],"/Users/nishant/Desktop/01-starting-project/src/components/RoomWard/ShowRoomWardComponent.jsx",[],"/Users/nishant/Desktop/01-starting-project/src/components/RoomWard/WardComponent.jsx",[],"/Users/nishant/Desktop/01-starting-project/src/components/RoomWard/RoomComponent.jsx",["127"],"import { useState } from \"react\";\n\nconst RoomComponent=()=>{\n\n    const [data,setData]=useState({'RoomId':null,'Name':\"\",'IsAvailable':true,'Charge':null,'WardId':null});\n\n   \n  async function handleAddRoom(event){\n    event.preventDefault();\n//    console.log(data);\n  const response = await fetch(\n    process.env.REACT_APP_API + \"/Room\",\n    {\n      method: \"POSt\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify(data)\n\n    }\n  )\n  // console.log(response);\n//   props.handleNewDoc();\n}\n\n\n\n\n    return(\n\n       \n        <form>\n        <div className='control-group'>\n          <div className='form-control'>\n            <label htmlFor='RoomId'>RoomId</label>\n            <input type='number' id='RoomId' onChange={(e)=>setData({...data,RoomId:parseInt(e.target.value)})}/>\n          </div>\n          <div className='form-control'>\n            <label htmlFor='name'>Name</label>\n            <input type='text' id='name' onChange={(e)=>setData({...data,Name:e.target.value})} />\n          </div>\n          <div className='form-control'>\n            <label htmlFor='IsAvailablee'>Availablity</label>\n            <input type='boolean' id='IsAvailable' \n            onChange={(e)=>setData({...data,IsAvailable:true})}\n             />\n          </div>\n          <div className='form-control'>\n            <label htmlFor='charge'>Charge</label>\n            <input type='number' id='charge' onChange={(e)=>setData({...data,Charge:parseInt(e.target.value)})}/>\n          </div>\n          {/* <div className='form-control'>\n            <label htmlFor='WardId'>WardId</label>\n            <input type='number' id='WardId' onChange={(e)=>setData({...data,WardId:parseInt(e.target.value)})}/>\n          </div> */}\n          <div>\n          <label>\n          WardId:  </label>\n          <select  onChange={(e)=>setData({...data,WardId:parseInt(e.target.value)})}>\n            <option value='1'>WardA</option>\n            <option value=\"2\">WardB</option>\n            <option value=\"3\">WardC</option>\n            <option value=\"4\">WardD</option>\n            <option value=\"5\">WardE</option>\n\n          </select>\n      \n        </div>\n\n          <button onClick={handleAddRoom}>Add New Ward</button>\n        </div>\n      </form>\n    )\n\n};\n\nexport default RoomComponent;","/Users/nishant/Desktop/01-starting-project/src/components/Patient/ModalComponent.jsx",["128","129"],"import React, { useEffect, useState } from \"react\";\nimport \"./Modal.css\";\n\nconst ModalComponent = (props) => {\n  const [data, setData] = useState({\n    BillId: props.BillId,\n    OPD_Fees: 500,\n    Doctor_Fees: 100,\n    Other_Fees: 0,\n    Medicine_Fees: 0,\n    IPD_Advance_Fees: 0,\n    Total_Fees: 0,\n    CanteenCharges: 0,\n    RoomCharges: 0,\n  });\n  const [roomcharge, SetRoomCharge] = useState(0);\n  const [doctorcharge, SetdoctorCharge] = useState(0);\n\n  async function handleAddOPD(event) {\n    event.preventDefault();\n    // let uniqueValue=new Date().valueOf();\n    // setData({...data,BillId:uniqueValue})\n    setTimeout(console.log(data), 5000);\n    props.setModal(false);\n\n    // setModal(true);\n    const response1 = await fetch(\n      `${process.env.REACT_APP_API}/Bill/${props.BillId}`,\n      {\n        method: \"PUT\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n        },\n        body: JSON.stringify(data),\n      }\n    );\n  }\n\n  async function getRoomCharge() {\n    const response = await fetch(process.env.REACT_APP_API + \"/Room/\"+props.RoomId);\n    const data = await response.json();\n    SetRoomCharge(data.Charge);\n\n  }\n  async function getDoctorCharge() {\n    const response = await fetch(process.env.REACT_APP_API + \"/Doctor/\"+props.DoctorId);\n    const data = await response.json();\n    SetdoctorCharge(data.Fees);\n\n  }\n  useEffect(() => {\n    getRoomCharge();\n    getDoctorCharge();\n    // getDoctorCharge();\n  }, []);\n  return (\n    <div className=\"modalBackground\">\n      <div className=\"modalContainer\">\n        <div className=\"titleCloseBtn\"></div>\n        <div className=\"title\">\n          <h1>Patient has been added</h1>\n        </div>\n        <div className=\"body\">\n          <p>Your Bill has been generated . You BillId is</p>\n          <br></br>\n          <div>{props.BillId}</div>\n        </div>\n        {!props.IPD ? (\n          <div>\n            <div className=\"body\">\n              <label htmlFor=\"name\">OPD Fees</label>\n              <input type=\"number\" id=\"OPD_Fees\" value={500} readOnly />\n            </div>\n            <div className=\"body\">\n              <label htmlFor=\"name\">Doctor Fees</label>\n              <input type=\"number\" id=\"Doctor_Fees\" value={100} readOnly />\n            </div>\n            <div className=\"body\">\n              <label htmlFor=\"name\">Other Charges </label>\n              <input\n                type=\"number\"\n                id=\"Other_Fees\"\n                onChange={(e) =>\n                  setData({ ...data, Other_Fees: e.target.value })\n                }\n              />\n            </div>\n          </div>\n        ) : (\n          <div>\n            <div className=\"body\">\n              <label htmlFor=\"name\">IPD Advance</label>\n              <input\n                type=\"number\"\n                id=\"IPD_Advance_Fees\"\n                onChange={(e) =>\n                  setData({ ...data, IPD_Advance_Fees: e.target.value ,OPD_Fees:0})\n                }\n              />\n            </div>\n            <div className=\"body\">\n              <label htmlFor=\"name\">Doctor Fees</label>\n              <input\n                type=\"number\"\n                id=\"Doctor_Fees\"\n                value={doctorcharge}\n                readOnly\n              />\n            </div>\n            <div className=\"body\">\n              <label htmlFor=\"name\">Room Charge</label>\n              <input\n                type=\"number\"\n                id=\"Room\"\n                value={roomcharge}\n                readOnly\n              />\n            </div>\n            <div className=\"body\">\n              <label htmlFor=\"name\">Other Charges </label>\n              <input\n                type=\"number\"\n                id=\"Other_Fees\"\n                onChange={(e) =>\n                  setData({ ...data, Other_Fees: e.target.value,Doctor_Fees:doctorcharge ,RoomCharges:roomcharge})\n                }\n              />\n            </div>\n          </div>\n        )}\n\n        <div className=\"footer\">\n          <button onClick={(e) => handleAddOPD(e)} id=\"cancelBtn\">\n            Continue\n          </button>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default ModalComponent;\n","/Users/nishant/Desktop/01-starting-project/src/components/IPDPatientsList/IPDPatientsList.jsx",[],"/Users/nishant/Desktop/01-starting-project/src/components/IPDPatientsList/AddMedicineForm.jsx",["130","131","132","133","134","135","136","137"],"/Users/nishant/Desktop/01-starting-project/src/components/IPDPatientsList/Dischargedpatient.jsx",["138","139","140","141","142"],"import React, { useEffect, useState } from \"react\";\r\nconst DischargedPatient = (props) => {\r\n  const [Bill, SetBill] = useState([]);\r\n  const [tempBill, SettempBill] = useState([]);\r\n  const [isSeeMedicineBill, SetisSeeMedicineBill] = useState(false);\r\n  const [MedicineBill, SetMedicineBill] = useState([]);\r\n  const [isSeeCanteenBill, SetisSeeCanteenBill] = useState(false);\r\n  const [CanteenBill, SetCanteenBill] = useState([]);\r\n  async function getBill() {\r\n    const response = await fetch(\r\n      process.env.REACT_APP_API + \"/Bill/\" + props.patient.BillId\r\n    );\r\n    const billData = await response.json();\r\n    SetBill(billData);\r\n    SettempBill(billData);\r\n  }\r\n  console.log(Bill);\r\n  // const onNoOfDaysChanged = (evt) => {\r\n  //   var days = evt.target.value;\r\n  //   // SetNoOfDays(days);\r\n  //   SetBill((prevState) => {\r\n  //     return {\r\n  //       ...prevState,\r\n  //       RoomCharges: tempBill.RoomCharges * days,\r\n  //       Doctor_Fees: tempBill.Doctor_Fees * days,\r\n  //       Total_Fees: tempBill.Doctor_Fees * days,\r\n  //       // tempBill.Total_Fees +\r\n  //       // tempBill.RoomCharges * (days - 1) +\r\n  //       // tempBill.Doctor_Fees * (days - 1),\r\n  //     };\r\n  //   });\r\n  // };\r\n  async function dischargeKarDo() {\r\n    const deleteMedicineBillsresponse = await fetch(\r\n      process.env.REACT_APP_API +\r\n        \"/MedicineBill/DeleteMedicineBillsByBillId/\" +\r\n        props.patient.BillId,\r\n      {\r\n        method: \"DELETE\",\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n      }\r\n    );\r\n    const deleteCanteenBillsresponse = await fetch(\r\n      process.env.REACT_APP_API +\r\n        \"/CanteenBill/DeleteCanteenBillsByBillId/\" +\r\n        props.patient.BillId,\r\n      {\r\n        method: \"DELETE\",\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n      }\r\n    );\r\n    const deleteBillsresponse = await fetch(\r\n      process.env.REACT_APP_API + \"/Bill/\" + props.patient.BillId,\r\n      {\r\n        method: \"DELETE\",\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n      }\r\n    );\r\n    const deletePatientsresponse = await fetch(\r\n      process.env.REACT_APP_API + \"/Patient/\" + props.patient.PatientId,\r\n      {\r\n        method: \"DELETE\",\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n      }\r\n    );\r\n    props.isDis(false);\r\n  }\r\n  async function seeMedicineBillDetails() {\r\n    const response = await fetch(\r\n      process.env.REACT_APP_API +\r\n        \"/MedicineBill/MedicineBillsByBillId/\" +\r\n        props.patient.BillId\r\n    );\r\n    const medicineBillData = await response.json();\r\n    SetMedicineBill(medicineBillData);\r\n    SetisSeeMedicineBill(true);\r\n  }\r\n  async function seeCanteenBillDetails() {\r\n    const response = await fetch(\r\n      process.env.REACT_APP_API +\r\n        \"/CanteenBill/CanteenBillsByBillId/\" +\r\n        props.patient.BillId\r\n    );\r\n    const canteenBillData = await response.json();\r\n    SetCanteenBill(canteenBillData);\r\n    SetisSeeCanteenBill(true);\r\n  }\r\n  useEffect(() => {\r\n    getBill();\r\n  }, [props]);\r\n  // console.log(Bill);\r\n  return (\r\n    <div>\r\n      <p>Discharged Patient Name: {props.patient.FirstName}</p>\r\n      <p>Review Bill</p>\r\n      <p>Enter No of Days Patient stayed In hospital</p>\r\n      <input\r\n        type=\"number\"\r\n        onChange={(evt) => {\r\n          SetBill((prevState) => {\r\n            return {\r\n              ...prevState,\r\n              RoomCharges: tempBill.RoomCharges * evt.target.value,\r\n              Doctor_Fees: tempBill.Doctor_Fees * evt.target.value,\r\n              Total_Fees:\r\n                tempBill.Total_Fees +\r\n                tempBill.RoomCharges * (evt.target.value - 1) +\r\n                tempBill.Doctor_Fees * (evt.target.value - 1),\r\n            };\r\n          });\r\n        }}\r\n      />\r\n      <table border={1}>\r\n        <thead>\r\n          <tr>\r\n            <td>BillId</td>\r\n            <td>OPD_Fees</td>\r\n            <td>Doctor_Fees</td>\r\n            <td>Other_Fees</td>\r\n            <td>MedicineCharges</td>\r\n            <td>CanteenCharges</td>\r\n            <td>IPD_Advance_Fees</td>\r\n            <td>RoomCharges</td>\r\n            <td>Total_Fees</td>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          <tr>\r\n            <td>{Bill.BillId}</td>\r\n            <td>{Bill.OPD_Fees}</td>\r\n            <td>{Bill.Doctor_Fees}</td>\r\n            <td>{Bill.Other_Fees}</td>\r\n            <td>{Bill.MedicineCharges}</td>\r\n            <td>{Bill.CanteenCharges}</td>\r\n            <td>{Bill.IPD_Advance_Fees}</td>\r\n            <td>{Bill.RoomCharges}</td>\r\n            <td>{Bill.Total_Fees}</td>\r\n          </tr>\r\n        </tbody>\r\n      </table>\r\n      <button onClick={seeMedicineBillDetails}>See Medicine Details</button>\r\n      {isSeeMedicineBill === true && (\r\n        <>\r\n          <table>\r\n            <tbody>\r\n              {MedicineBill.map((e, index) => {\r\n                // console.log(e);\r\n                return (\r\n                  <tr key={index}>\r\n                    <td>{e.MedicineBillId}</td>\r\n                    <td>{e.MedicineId}</td>\r\n                    <td>{e.Quantity}</td>\r\n                    <td>{e.TotalPrice}</td>\r\n                  </tr>\r\n                );\r\n              })}\r\n            </tbody>\r\n          </table>\r\n        </>\r\n      )}\r\n      <button onClick={seeCanteenBillDetails}>See Canteen Details</button>\r\n      {isSeeCanteenBill === true && (\r\n        <>\r\n          <table>\r\n            <tbody>\r\n              {CanteenBill.map((e, index) => {\r\n                // console.log(e);\r\n                return (\r\n                  <tr key={index}>\r\n                    <td>{e.CanteenBillId}</td>\r\n                    <td>{e.FoodId}</td>\r\n                    <td>{e.Quantity}</td>\r\n                    <td>{e.TotalPrice}</td>\r\n                  </tr>\r\n                );\r\n              })}\r\n            </tbody>\r\n          </table>\r\n        </>\r\n      )}\r\n      <button onClick={() => {}}>Print Bill</button>\r\n      <button onClick={dischargeKarDo}>Confirm and Discharge Patient</button>\r\n    </div>\r\n  );\r\n};\r\nexport default DischargedPatient;\r\n","/Users/nishant/Desktop/01-starting-project/src/components/IPDPatientsList/AddFoodForm.jsx",["143","144","145","146","147","148","149","150","151","152"],"/Users/nishant/Desktop/01-starting-project/src/components/Reports/Reports.jsx",["153"],"import React, { useState, useEffect } from \"react\";\r\nimport DoctorBySpecComp from \"./DoctorBySpecComp\";\r\nimport DoctorByTypeComp from \"./DoctorByTypeComp\";\r\nimport PatientByDoctorComp from \"./PatientByDoctorComp\";\r\nimport PatientByWardComp from \"./PatientByWardComp\";\r\n\r\nconst Reports = () => {\r\n  const [isDoctorBySpecReport, SetisDoctorBySpecReport] = useState(false);\r\n  const seeDoctorBySpec = () => {\r\n    SetisDoctorBySpecReport(true);\r\n    SetisDoctorByTypeReport(false);\r\n    SetisPatientByDoctorReport(false);\r\n    SetisPatientByWardReport(false);\r\n  };\r\n  const [isDoctorByTypeReport, SetisDoctorByTypeReport] = useState(false);\r\n  const seeDoctorByType = () => {\r\n    SetisDoctorByTypeReport(true);\r\n    SetisDoctorBySpecReport(false);\r\n    SetisPatientByDoctorReport(false);\r\n    SetisPatientByWardReport(false);\r\n  };\r\n  const [isPatientByDoctorReport, SetisPatientByDoctorReport] = useState(false);\r\n  const seePatientByDoctor = () => {\r\n    SetisPatientByDoctorReport(true);\r\n    SetisDoctorByTypeReport(false);\r\n    SetisDoctorBySpecReport(false);\r\n    SetisPatientByWardReport(false);\r\n  };\r\n  const [isPatientByWardReport, SetisPatientByWardReport] = useState(false);\r\n  const seePatientByWard = () => {\r\n    SetisPatientByWardReport(true);\r\n    SetisPatientByDoctorReport(false);\r\n    SetisDoctorByTypeReport(false);\r\n    SetisDoctorBySpecReport(false);\r\n  };\r\n  return (\r\n    <>\r\n      <button onClick={seeDoctorBySpec}>\r\n        List Doctor based on specialisation\r\n      </button>\r\n      <button onClick={seeDoctorByType}>List Doctor based on Type</button>\r\n      <button onClick={seePatientByDoctor}>List Patient based on Doctor</button>\r\n      <button onClick={seePatientByWard}>List Patient based on Ward</button>\r\n      {isDoctorByTypeReport === true && <DoctorByTypeComp />}\r\n      {isDoctorBySpecReport === true && <DoctorBySpecComp />}\r\n      {isPatientByDoctorReport === true && <PatientByDoctorComp />}\r\n      {isPatientByWardReport === true && <PatientByWardComp />}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Reports;\r\n","/Users/nishant/Desktop/01-starting-project/src/components/Reports/DoctorByTypeComp.jsx",["154"],"/Users/nishant/Desktop/01-starting-project/src/components/Reports/PatientByDoctorComp.jsx",[],"/Users/nishant/Desktop/01-starting-project/src/components/Reports/DoctorBySpecComp.jsx",["155"],"/Users/nishant/Desktop/01-starting-project/src/components/Reports/PatientByWardComp.jsx",[],{"ruleId":"156","severity":1,"message":"157","line":2,"column":8,"nodeType":"158","messageId":"159","endLine":2,"endColumn":27},{"ruleId":"160","replacedBy":"161"},{"ruleId":"162","replacedBy":"163"},{"ruleId":"156","severity":1,"message":"164","line":10,"column":9,"nodeType":"158","messageId":"159","endLine":10,"endColumn":17},{"ruleId":"160","replacedBy":"165"},{"ruleId":"162","replacedBy":"166"},{"ruleId":"167","severity":2,"message":"168","line":8,"column":42,"nodeType":"158","endLine":8,"endColumn":50},{"ruleId":"167","severity":2,"message":"168","line":9,"column":40,"nodeType":"158","endLine":9,"endColumn":48},{"ruleId":"167","severity":2,"message":"168","line":10,"column":44,"nodeType":"158","endLine":10,"endColumn":52},{"ruleId":"160","replacedBy":"169"},{"ruleId":"162","replacedBy":"170"},{"ruleId":"156","severity":1,"message":"171","line":39,"column":11,"nodeType":"158","messageId":"159","endLine":39,"endColumn":20},{"ruleId":"156","severity":1,"message":"172","line":69,"column":11,"nodeType":"158","messageId":"159","endLine":69,"endColumn":20},{"ruleId":"156","severity":1,"message":"172","line":95,"column":11,"nodeType":"158","messageId":"159","endLine":95,"endColumn":20},{"ruleId":"156","severity":1,"message":"173","line":118,"column":9,"nodeType":"158","messageId":"159","endLine":118,"endColumn":24},{"ruleId":"156","severity":1,"message":"174","line":123,"column":9,"nodeType":"158","messageId":"159","endLine":123,"endColumn":18},{"ruleId":"156","severity":1,"message":"164","line":11,"column":9,"nodeType":"158","messageId":"159","endLine":11,"endColumn":17},{"ruleId":"156","severity":1,"message":"172","line":27,"column":11,"nodeType":"158","messageId":"159","endLine":27,"endColumn":20},{"ruleId":"175","severity":1,"message":"176","line":55,"column":6,"nodeType":"177","endLine":55,"endColumn":8,"suggestions":"178"},{"ruleId":"156","severity":1,"message":"164","line":66,"column":13,"nodeType":"158","messageId":"159","endLine":66,"endColumn":21},{"ruleId":"156","severity":1,"message":"179","line":90,"column":13,"nodeType":"158","messageId":"159","endLine":90,"endColumn":24},{"ruleId":"180","severity":1,"message":"181","line":150,"column":30,"nodeType":"182","messageId":"183","endLine":150,"endColumn":32},{"ruleId":"180","severity":1,"message":"181","line":153,"column":30,"nodeType":"182","messageId":"183","endLine":153,"endColumn":32},{"ruleId":"180","severity":1,"message":"181","line":157,"column":30,"nodeType":"182","messageId":"183","endLine":157,"endColumn":32},{"ruleId":"180","severity":1,"message":"181","line":163,"column":30,"nodeType":"182","messageId":"183","endLine":163,"endColumn":32},{"ruleId":"180","severity":1,"message":"181","line":167,"column":19,"nodeType":"182","messageId":"183","endLine":167,"endColumn":21},{"ruleId":"180","severity":1,"message":"181","line":168,"column":18,"nodeType":"182","messageId":"183","endLine":168,"endColumn":20},{"ruleId":"156","severity":1,"message":"184","line":34,"column":11,"nodeType":"158","messageId":"159","endLine":34,"endColumn":38},{"ruleId":"156","severity":1,"message":"185","line":45,"column":11,"nodeType":"158","messageId":"159","endLine":45,"endColumn":37},{"ruleId":"156","severity":1,"message":"186","line":56,"column":11,"nodeType":"158","messageId":"159","endLine":56,"endColumn":30},{"ruleId":"156","severity":1,"message":"187","line":65,"column":11,"nodeType":"158","messageId":"159","endLine":65,"endColumn":33},{"ruleId":"175","severity":1,"message":"188","line":98,"column":6,"nodeType":"177","endLine":98,"endColumn":13,"suggestions":"189"},{"ruleId":"156","severity":1,"message":"190","line":1,"column":17,"nodeType":"158","messageId":"159","endLine":1,"endColumn":25},{"ruleId":"156","severity":1,"message":"191","line":1,"column":27,"nodeType":"158","messageId":"159","endLine":1,"endColumn":36},{"ruleId":"156","severity":1,"message":"164","line":54,"column":13,"nodeType":"158","messageId":"159","endLine":54,"endColumn":21},{"ruleId":"156","severity":1,"message":"179","line":75,"column":13,"nodeType":"158","messageId":"159","endLine":75,"endColumn":24},{"ruleId":"180","severity":1,"message":"181","line":139,"column":26,"nodeType":"182","messageId":"183","endLine":139,"endColumn":28},{"ruleId":"180","severity":1,"message":"181","line":140,"column":26,"nodeType":"182","messageId":"183","endLine":140,"endColumn":28},{"ruleId":"180","severity":1,"message":"181","line":144,"column":26,"nodeType":"182","messageId":"183","endLine":144,"endColumn":28},{"ruleId":"180","severity":1,"message":"181","line":150,"column":26,"nodeType":"182","messageId":"183","endLine":150,"endColumn":28},{"ruleId":"180","severity":1,"message":"181","line":154,"column":19,"nodeType":"182","messageId":"183","endLine":154,"endColumn":21},{"ruleId":"180","severity":1,"message":"181","line":155,"column":18,"nodeType":"182","messageId":"183","endLine":155,"endColumn":20},{"ruleId":"156","severity":1,"message":"192","line":1,"column":27,"nodeType":"158","messageId":"159","endLine":1,"endColumn":36},{"ruleId":"156","severity":1,"message":"192","line":1,"column":27,"nodeType":"158","messageId":"159","endLine":1,"endColumn":36},{"ruleId":"156","severity":1,"message":"192","line":1,"column":27,"nodeType":"158","messageId":"159","endLine":1,"endColumn":36},"no-unused-vars","'OpdPatientComponent' is defined but never used.","Identifier","unusedVar","no-native-reassign",["193"],"no-negated-in-lhs",["194"],"'response' is assigned a value but never used.",["193"],["194"],"react-hooks/rules-of-hooks","React Hook \"useState\" is called in function \"staffComponent\" that is neither a React function component nor a custom React Hook function. React component names must start with an uppercase letter. React Hook names must start with the word \"use\".",["193"],["194"],"'response2' is assigned a value but never used.","'response1' is assigned a value but never used.","'handleCalculate' is assigned a value but never used.","'handleIPD' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'getDoctorCharge' and 'getRoomCharge'. Either include them or remove the dependency array.","ArrayExpression",["195"],"'putresponse' is assigned a value but never used.","eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","'deleteMedicineBillsresponse' is assigned a value but never used.","'deleteCanteenBillsresponse' is assigned a value but never used.","'deleteBillsresponse' is assigned a value but never used.","'deletePatientsresponse' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'getBill'. Either include it or remove the dependency array.",["196"],"'UseState' is defined but never used.","'UseEffect' is defined but never used.","'useEffect' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"197","fix":"198"},{"desc":"199","fix":"200"},"Update the dependencies array to be: [getDoctorCharge, getRoomCharge]",{"range":"201","text":"202"},"Update the dependencies array to be: [getBill, props]",{"range":"203","text":"204"},[1457,1459],"[getDoctorCharge, getRoomCharge]",[3102,3109],"[getBill, props]"]