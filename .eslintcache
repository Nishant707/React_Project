[{"/Users/nishant/Desktop/01-starting-project/src/index.js":"1","/Users/nishant/Desktop/01-starting-project/src/App.js":"2","/Users/nishant/Desktop/01-starting-project/src/components/SimpleInput.js":"3","/Users/nishant/Desktop/01-starting-project/src/components/BasicForm.js":"4","/Users/nishant/Desktop/01-starting-project/src/components/staff/NurseComponent.jsx":"5","/Users/nishant/Desktop/01-starting-project/src/components/staff/DoctorComponent.jsx":"6","/Users/nishant/Desktop/01-starting-project/src/components/staff/WardBoyComponent.jsx":"7","/Users/nishant/Desktop/01-starting-project/src/components/staff/staffComponent.jsx":"8","/Users/nishant/Desktop/01-starting-project/src/components/staff/StaffComponent.jsx":"9","/Users/nishant/Desktop/01-starting-project/src/components/Patient/OpdPatientComponent.jsx":"10","/Users/nishant/Desktop/01-starting-project/src/components/ReusableComponent/ListComponent.jsx":"11","/Users/nishant/Desktop/01-starting-project/src/components/Patient/PatientListComponent.jsx":"12","/Users/nishant/Desktop/01-starting-project/src/components/RoomWard/ShowRoomWardComponent.jsx":"13","/Users/nishant/Desktop/01-starting-project/src/components/RoomWard/WardComponent.jsx":"14","/Users/nishant/Desktop/01-starting-project/src/components/RoomWard/RoomComponent.jsx":"15","/Users/nishant/Desktop/01-starting-project/src/components/Patient/ModalComponent.jsx":"16","/Users/nishant/Desktop/01-starting-project/src/components/IPDPatientsList/IPDPatientsList.jsx":"17","/Users/nishant/Desktop/01-starting-project/src/components/IPDPatientsList/AddMedicineForm.jsx":"18","/Users/nishant/Desktop/01-starting-project/src/components/IPDPatientsList/Dischargedpatient.jsx":"19","/Users/nishant/Desktop/01-starting-project/src/components/IPDPatientsList/AddFoodForm.jsx":"20","/Users/nishant/Desktop/01-starting-project/src/components/Reports/Reports.jsx":"21","/Users/nishant/Desktop/01-starting-project/src/components/Reports/DoctorByTypeComp.jsx":"22","/Users/nishant/Desktop/01-starting-project/src/components/Reports/PatientByDoctorComp.jsx":"23","/Users/nishant/Desktop/01-starting-project/src/components/Reports/DoctorBySpecComp.jsx":"24","/Users/nishant/Desktop/01-starting-project/src/components/Reports/PatientByWardComp.jsx":"25"},{"size":179,"mtime":1648643023000,"results":"26","hashOfConfig":"27"},{"size":1882,"mtime":1663661598050,"results":"28","hashOfConfig":"27"},{"size":324,"mtime":1648643101000,"results":"29","hashOfConfig":"27"},{"size":669,"mtime":1648643101000,"results":"30","hashOfConfig":"27"},{"size":1925,"mtime":1663326784315,"results":"31","hashOfConfig":"27"},{"size":2410,"mtime":1663612125186,"results":"32","hashOfConfig":"27"},{"size":869,"mtime":1663258722600,"results":"33","hashOfConfig":"27"},{"size":1313,"mtime":1663263111252,"results":"34","hashOfConfig":"27"},{"size":5547,"mtime":1663587363682,"results":"35","hashOfConfig":"27"},{"size":7511,"mtime":1663659473534,"results":"36","hashOfConfig":"27"},{"size":610,"mtime":1663328168172,"results":"37","hashOfConfig":"27"},{"size":1439,"mtime":1663654880291,"results":"38","hashOfConfig":"27"},{"size":3482,"mtime":1663608458633,"results":"39","hashOfConfig":"27"},{"size":1258,"mtime":1663616908236,"results":"40","hashOfConfig":"27"},{"size":2304,"mtime":1663612674163,"results":"41","hashOfConfig":"27"},{"size":2874,"mtime":1663661860831,"results":"42","hashOfConfig":"27"},{"size":4872,"mtime":1663653836959,"results":"43","hashOfConfig":"27"},{"size":5467,"mtime":1663659254874,"results":"44","hashOfConfig":"27"},{"size":6144,"mtime":1663658787540,"results":"45","hashOfConfig":"27"},{"size":4414,"mtime":1663659177108,"results":"46","hashOfConfig":"27"},{"size":2046,"mtime":1663657208000,"results":"47","hashOfConfig":"27"},{"size":1748,"mtime":1663655624000,"results":"48","hashOfConfig":"27"},{"size":2080,"mtime":1663656996000,"results":"49","hashOfConfig":"27"},{"size":1813,"mtime":1663655248000,"results":"50","hashOfConfig":"27"},{"size":2549,"mtime":1663659770000,"results":"51","hashOfConfig":"27"},{"filePath":"52","messages":"53","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},"jvebet",{"filePath":"55","messages":"56","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"57","messages":"58","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"59"},{"filePath":"60","messages":"61","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"59"},{"filePath":"62","messages":"63","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"64","messages":"65","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"66","usedDeprecatedRules":"54"},{"filePath":"67","messages":"68","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"69","messages":"70","errorCount":3,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"71","usedDeprecatedRules":"72"},{"filePath":"73","messages":"74","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"75","messages":"76","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"77","usedDeprecatedRules":"54"},{"filePath":"78","messages":"79","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"80","messages":"81","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"82","messages":"83","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"84","messages":"85","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"86","messages":"87","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"88","usedDeprecatedRules":"54"},{"filePath":"89","messages":"90","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"91","messages":"92","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"93","messages":"94","errorCount":0,"fatalErrorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"95","usedDeprecatedRules":"54"},{"filePath":"96","messages":"97","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"98","usedDeprecatedRules":"54"},{"filePath":"99","messages":"100","errorCount":0,"fatalErrorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"101","usedDeprecatedRules":"54"},{"filePath":"102","messages":"103","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"104","messages":"105","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"106","messages":"107","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"108","messages":"109","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"110","messages":"111","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/nishant/Desktop/01-starting-project/src/index.js",[],["112","113"],"/Users/nishant/Desktop/01-starting-project/src/App.js",["114"],"/Users/nishant/Desktop/01-starting-project/src/components/SimpleInput.js",[],["115","116"],"/Users/nishant/Desktop/01-starting-project/src/components/BasicForm.js",[],"/Users/nishant/Desktop/01-starting-project/src/components/staff/NurseComponent.jsx",[],"/Users/nishant/Desktop/01-starting-project/src/components/staff/DoctorComponent.jsx",["117"],"import { useState } from \"react\";\n\nconst DoctorComponent = (props) => {\n  \n  const [data,setData]=useState({\"DoctorId\":0,\"Name\":\"\",\"Email\":\"\",\"MobileNo\":0,\"Specialization\":\"\",\"Fees\":0,\"Type\":\"\"});\n\n  async function handleAdd(event){\n    event.preventDefault();\n   console.log(data);\n  const response = await fetch(\n    process.env.REACT_APP_API + \"/Doctor\",\n    {\n      method: \"POSt\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify(data)\n\n    }\n  )\n  // console.log(response);\n  props.handleNewDoc();\n\n  }\n\n    return (\n      <form>\n        <div className='control-group'>\n          <div className='form-control'>\n            <label htmlFor='name'>Doctor Id</label>\n            <input type='number' id='docId' value={data.DoctorId} onChange={(e)=>setData({...data,DoctorId:parseInt(e.target.value)})}/>\n          </div>\n          <div className='form-control'>\n            <label htmlFor='name'>Name</label>\n            <input type='text' id='name' value={data.Name} onChange={(e)=>setData({...data,Name:e.target.value})}/>\n          </div>\n        </div>\n        <div className='form-control'>\n          <label htmlFor='name'>E-Mail Address</label>\n          <input type='text' id='mail' value={data.Email} onChange={(e)=>setData({...data,Email:e.target.value})}/>\n        </div>\n        <div className='form-control'>\n          <label htmlFor='name'>Mobile Number</label>\n          <input type='number' id='mobile' value={data.MobileNo} onChange={(e)=>setData({...data,MobileNo:parseInt(e.target.value)})}/>\n        </div>\n        <div className='form-control'>\n          <label htmlFor='name'>Specialization</label>\n          <input type='text' id='specialization' value={data.Specialization} onChange={(e)=>setData({...data,Specialization:e.target.value})}/>\n        </div>\n        <div className='form-control'>\n          <label htmlFor='name'>Fees</label>\n          <input type='number' id='fees' value={data.Fees} onChange={(e)=>setData({...data,Fees:parseInt(e.target.value)})}/>\n        </div>\n        <div className='form-control'>\n          <label htmlFor='name'>Type</label>\n          <input type='text' id='type' value={data.Type} onChange={(e)=>setData({...data,Type:e.target.value})}/>\n        </div>\n        <div >\n          <button onClick={handleAdd}>Add</button>\n        </div>\n      </form>\n    );\n  };\n  \n  export default DoctorComponent;","/Users/nishant/Desktop/01-starting-project/src/components/staff/WardBoyComponent.jsx",[],"/Users/nishant/Desktop/01-starting-project/src/components/staff/staffComponent.jsx",["118","119","120"],"import DoctorComponent from \"./DoctorComponent\";\nimport NurseComponent from \"./NurseComponent\";\nimport WardBoyComponent from \"./WardBoyComponent\";\nimport { useState } from \"react\";\n\n\nconst staffComponent=()=>{\n    const [isDoctorShown,setDoctorShown]=useState(false);\n    const [isNurseShown,setNurseShown]=useState(false);\n    const [isWardBoyShown,setWardBoyShown]=useState(false);\n  \n    const handleNurse=()=>{\n      setDoctorShown(false);\n      setWardBoyShown(false);\n      setNurseShown(current=>!current);\n    }\n    const handleDoctor=()=>{\n      setWardBoyShown(false);\n      setNurseShown(false);\n      setDoctorShown(current=>!current);\n    \n    }\n    const handleWardBoy=()=>{\n      setDoctorShown(false);\n      setNurseShown(false);\n      setWardBoyShown(current=>!current);\n    }\n   return(\n    <div className=\"app\">\n      <button onClick={handleDoctor}>\nDoctor\n      </button>\n      <button onClick={handleNurse}>\nNurse\n      </button>\n      <button onClick={handleWardBoy}>\nWardBoy\n      </button>\n    {isNurseShown && <NurseComponent/>}\n    {isDoctorShown && <DoctorComponent/>}\n    {isWardBoyShown && <WardBoyComponent/>}\n    </div>\n   );\n}\n\nexport default staffComponent;",["121","122"],"/Users/nishant/Desktop/01-starting-project/src/components/staff/StaffComponent.jsx",[],"/Users/nishant/Desktop/01-starting-project/src/components/Patient/OpdPatientComponent.jsx",["123","124","125","126","127"],"import { useState } from \"react\";\nimport ModalComponent from \"./ModalComponent\";\n\n\nconst OpdPatientComponent=()=>{\nconst [data,setData]=useState({\"PatientId\":0,\"FirstName\":\"\",\"LastName\":\"\",\"MiddleName\":\"\",\"Email\":\"\",\"MobileNo\":0,\"Address\":\"\",\"isAdmitted\":false,\"AgeType\":null,'DateOfBirth':0,'Gender':'',\"RoomId\":null,\"BillId\":parseInt(Math.random()*1000+1),\"AssignedDoctor\":null});\nconst [Admitted,setisAdmitted]=useState(false);\nconst [modal,setModal]=useState(false);\n\nconst handleAdmit=(e)=>{\n    e.preventDefault();\n  \n    setData({...data,isAdmitted:!Admitted})\n    if(!Admitted){\n        e.target.style.backgroundColor = \"green\"\n        }\n        else{\n            e.target.style.backgroundColor= \"#240370\";\n        }\n    setisAdmitted(current=>!current);\n  \n}\n\nasync function handleAPIPatient(){\n  const response2 = await fetch(\n    process.env.REACT_APP_API + \"/Patient\",\n    {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify(data)\n  \n    }\n  )\n\n}\n\nasync function handleAddOPD(event){\n\n\n\n  event.preventDefault();\n  // let uniqueValue=new Date().valueOf();\n  // setData({...data,BillId:uniqueValue})\n  setTimeout(console.log(data),5000);\n  setModal(true);\n  const response1 = await fetch(\n    process.env.REACT_APP_API + \"/Bill\",\n    {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify({BillId:data.BillId,OPD_Fees:100,Doctor_Fees:100,Other_Fees:1000,Medicine_Fees:0,IPD_Advance_Fees:0,Total_Fees:0,CanteenCharges:0,RoomCharges:0})\n  \n    }\n  )\n  handleAPIPatient();\n\n}\n\nasync function handleAddIPD(event){\n  event.preventDefault();\n  // let uniqueValue=new Date().valueOf();\n  // setData({...data,BillId:uniqueValue})\n  setTimeout(console.log(data),5000);\n  setModal(true);\n  const response1 = await fetch(\n    process.env.REACT_APP_API + \"/Bill\",\n    {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify({BillId:data.BillId,OPD_Fees:0,Doctor_Fees:500,Other_Fees:0,Medicine_Fees:0,IPD_Advance_Fees:200,Total_Fees:0,CanteenCharges:0,RoomCharges:0})\n  \n    }\n  )\n\n\n\n  handleAPIPatient();\n// console.log(response);\n// props.handleNewDoc();\n\n}\n\n\nconst handleCalculate=(e)=>{\n    e.preventDefault();\n    console.log(data);\n} \n\nconst handleIPD=(e)=>{\n    e.preventDefault();\n\n    console.log(data);\n} \n    return (\n      <div>\n        {modal && <ModalComponent setModal={setModal} BillId={data.BillId} IPD={data.isAdmitted}/>}\n\n        <form>\n          <div className='control-group'>\n            <div className='form-control'>\n              <label htmlFor='name'>Patient Id</label>\n              <input type='number' id='PatientId' value={data.PatientId} onChange={(e)=>setData({...data,PatientId:parseInt(e.target.value)})}/>\n            </div>\n            <div className='form-control'>\n              <label htmlFor='name'>First Name</label>\n              <input type='text' id='firstname' value={data.FirstName} onChange={(e)=>setData({...data,FirstName:e.target.value})}/>\n            </div>\n            <div className='form-control'>\n              <label htmlFor='name'>Middle Name</label>\n              <input type='text' id='middlename' value={data.MiddleName} onChange={(e)=>setData({...data,MiddleName:e.target.value})}/>\n            </div>\n            <div className='form-control'>\n              <label htmlFor='name'>Last Name</label>\n              <input type='text' id='lastname' value={data.LastName} onChange={(e)=>setData({...data,LastName:e.target.value})}/>\n            </div>\n          </div>\n          <div className='form-control'>\n            <label htmlFor='name'>E-Mail Address</label>\n            <input type='text' id='mail' value={data.Email} onChange={(e)=>setData({...data,Email:e.target.value})}/>\n          </div>\n          <div className='form-control'>\n            <label htmlFor='name'>Mobile Number</label>\n            <input type='number' id='mobile' value={data.MobileNo} onChange={(e)=>setData({...data,MobileNo:parseInt(e.target.value)})}/>\n          </div>\n          <div className='form-control'>\n            <label htmlFor='name'>Address</label>\n            <input type='text' id='address' value={data.Address} onChange={(e)=>setData({...data,Address:e.target.value})}/>\n          </div>\n          <div className='form-control'>\n            <label htmlFor='name'>DOB</label>\n            <input type='text' id='dob' value={data.DateOfBirth} onChange={(e)=>setData({...data,DateOfBirth:e.target.value})}/>\n          </div>\n          <div className='form-control'>\n            <label htmlFor='name'>Gender</label>\n            <input type='text' id='gender' value={data.Gender} onChange={(e)=>setData({...data,Gender:e.target.value})}/>\n          </div>\n          {/* <div className='form-control'>\n            <label htmlFor='name'>Age Type</label>\n            <input type='text' id='age' value={data.AgeType} onChange={(e)=>setData({...data,AgeType:e.target.value})}/>\n          </div> */}\n          <div>\n          <div>\n          <label>\n          Age Type:  </label>\n          <select  onChange={(e)=>setData({...data,AgeType:e.target.value})}>\n            <option value='Major'>Major</option>\n            <option value='Minor'>Minor</option>\n            {/* <option value=\"103\">103</option>\n            <option value=\"111\">111</option>\n            <option value=\"1022\">1022</option> */}\n\n          </select>\n      \n        </div>\n    \n            <button onClick={(e)=>handleAdmit(e)}>Admit To IPD</button>\n          </div>\n          <div >\n            {Admitted?\n            <div>\n         {/* <div className='form-control'>\n         <label htmlFor='name'>Room Id</label>\n         <input type='text' id='roomid' value={data.RoomId} onChange={(e)=>setData({...data,RoomId:e.target.value})}/>\n       </div> */}\n       {/* <div className='form-control'>\n         <label htmlFor='name'>Bill Id</label>\n         <input type='text' id='billid' value={data.BillId} onChange={(e)=>setData({...data,BillId:e.target.value})}/>\n       </div> */}\n       {/* <div className='form-control'>\n         <label htmlFor='name'>Doctor Assigned</label>\n         <input type='text' id='doctorAssigned' value={data.AssignedDoctor} onChange={(e)=>setData({...data,AssignedDoctor:e.target.value})}/>\n       </div> */}\n        <div>\n          <label>\n          Room Id:  </label>\n          <select  onChange={(e)=>setData({...data,RoomId:parseInt(e.target.value)})}>\n            <option value='101'>101</option>\n            <option value=\"102\">102</option>\n            <option value=\"105\">105</option>\n            {/* <option value=\"111\">111</option>\n            <option value=\"1022\">1022</option> */}\n\n          </select>\n      \n        </div>\n       <div>\n          <label>\n          Doctor Assigned:  </label>\n          <select  onChange={(e)=>setData({...data,AssignedDoctor:parseInt(e.target.value)})}>\n            <option value='101'>101</option>\n            <option value=\"102\">102</option>\n            <option value=\"103\">103</option>\n            <option value=\"111\">111</option>\n            <option value=\"1022\">1022</option>\n\n          </select>\n      \n        </div>\n       \n       \n<button onClick={e=>handleAddIPD(e)}>Add IPD Patient</button>\n       \n       </div>\n       \n       :\n            <button onClick={e=>handleAddOPD(e)}>Add OPD Patient</button>\n        }\n          </div>\n        </form>\n\n        </div>\n      );\n\n\n};\n\nexport default OpdPatientComponent;","/Users/nishant/Desktop/01-starting-project/src/components/ReusableComponent/ListComponent.jsx",[],"/Users/nishant/Desktop/01-starting-project/src/components/Patient/PatientListComponent.jsx",[],"/Users/nishant/Desktop/01-starting-project/src/components/RoomWard/ShowRoomWardComponent.jsx",[],"/Users/nishant/Desktop/01-starting-project/src/components/RoomWard/WardComponent.jsx",[],"/Users/nishant/Desktop/01-starting-project/src/components/RoomWard/RoomComponent.jsx",["128"],"import { useState } from \"react\";\n\nconst RoomComponent=()=>{\n\n    const [data,setData]=useState({'RoomId':null,'Name':\"\",'IsAvailable':true,'Charge':null,'WardId':null});\n\n   \n  async function handleAddRoom(event){\n    event.preventDefault();\n//    console.log(data);\n  const response = await fetch(\n    process.env.REACT_APP_API + \"/Room\",\n    {\n      method: \"POSt\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify(data)\n\n    }\n  )\n  // console.log(response);\n//   props.handleNewDoc();\n}\n\n\n\n\n    return(\n\n       \n        <form>\n        <div className='control-group'>\n          <div className='form-control'>\n            <label htmlFor='RoomId'>RoomId</label>\n            <input type='number' id='RoomId' onChange={(e)=>setData({...data,RoomId:parseInt(e.target.value)})}/>\n          </div>\n          <div className='form-control'>\n            <label htmlFor='name'>Name</label>\n            <input type='text' id='name' onChange={(e)=>setData({...data,Name:e.target.value})} />\n          </div>\n          <div className='form-control'>\n            <label htmlFor='IsAvailablee'>Availablity</label>\n            <input type='boolean' id='IsAvailable' \n            onChange={(e)=>setData({...data,IsAvailable:true})}\n             />\n          </div>\n          <div className='form-control'>\n            <label htmlFor='charge'>Charge</label>\n            <input type='number' id='charge' onChange={(e)=>setData({...data,Charge:parseInt(e.target.value)})}/>\n          </div>\n          {/* <div className='form-control'>\n            <label htmlFor='WardId'>WardId</label>\n            <input type='number' id='WardId' onChange={(e)=>setData({...data,WardId:parseInt(e.target.value)})}/>\n          </div> */}\n          <div>\n          <label>\n          WardId:  </label>\n          <select  onChange={(e)=>setData({...data,WardId:parseInt(e.target.value)})}>\n            <option value='1'>WardA</option>\n            <option value=\"2\">WardB</option>\n            <option value=\"3\">WardC</option>\n            <option value=\"4\">WardD</option>\n            <option value=\"5\">WardE</option>\n\n          </select>\n      \n        </div>\n\n          <button onClick={handleAddRoom}>Add New Ward</button>\n        </div>\n      </form>\n    )\n\n};\n\nexport default RoomComponent;","/Users/nishant/Desktop/01-starting-project/src/components/Patient/ModalComponent.jsx",["129"],"/Users/nishant/Desktop/01-starting-project/src/components/IPDPatientsList/IPDPatientsList.jsx",[],"/Users/nishant/Desktop/01-starting-project/src/components/IPDPatientsList/AddMedicineForm.jsx",["130","131","132","133","134","135","136","137"],"import React, { useEffect, useState } from \"react\";\r\n\r\nconst AddMedicineForm = (props) => {\r\n  const [MedicineList, SetMedicineList] = useState([]);\r\n  const [SelecetedMedicineId, SetSelecetedMedicineId] = useState(0);\r\n  const [SelecetedMedicinePrice, SetSelecetedMedicinePrice] = useState(0);\r\n  const [Quantity, SetQuantity] = useState(0);\r\n  const [message, SetMessage] = useState(\"\");\r\n  async function getMedicineFromStore() {\r\n    const response = await fetch(process.env.REACT_APP_API + \"/MedicineStore\");\r\n    const medicinesdata = await response.json();\r\n    SetMedicineList(medicinesdata);\r\n    console.log(medicinesdata);\r\n  }\r\n  useEffect(() => {\r\n    getMedicineFromStore();\r\n  }, []);\r\n\r\n  const selectkiya = (medicineId) => {\r\n    SetSelecetedMedicineId(medicineId);\r\n    for (var j = 0; j < MedicineList.length; j++) {\r\n      console.log(MedicineList[j].MedicineId + \" => \" + medicineId);\r\n      if (MedicineList[j].MedicineId === parseInt(medicineId)) {\r\n        SetSelecetedMedicinePrice(MedicineList[j].Price);\r\n      }\r\n    }\r\n  };\r\n\r\n  async function submitMedicine(event) {\r\n    event.preventDefault();\r\n    try {\r\n      // var warddata3 = {\r\n      //   WardId: 124,\r\n      //   Name: \"wardnew\",\r\n      // };\r\n      // const wardresponse = await fetch(process.env.REACT_APP_API + \"/Ward\", {\r\n      //   method: \"POST\",\r\n      //   headers: {\r\n      //     \"Content-Type\": \"application/json\",\r\n      //   },\r\n      //   body: JSON.stringify(warddata3),\r\n      // });\r\n      // console.log(data);\r\n      const medicinebillres = await fetch(\r\n        process.env.REACT_APP_API + \"/MedicineBill\"\r\n      );\r\n      const allbill = await medicinebillres.json();\r\n      var allbillids = [];\r\n      for (let i = 0; i < allbill.length; i++) {\r\n        allbillids[0] = allbill.BillId;\r\n      }\r\n\r\n      console.log();\r\n      var randomid = parseInt(Math.random() * 1000) + 1;\r\n      while (allbillids.includes(randomid)) {\r\n        randomid = parseInt(Math.random() * 1000) + 1;\r\n      }\r\n\r\n      var medicinebillobject = {\r\n        MedicineBillId: randomid,\r\n        BillId: parseInt(props.patient.BillId),\r\n        MedicineId: parseInt(SelecetedMedicineId),\r\n        Quantity: parseInt(Quantity),\r\n        TotalPrice: parseFloat(SelecetedMedicinePrice * Quantity),\r\n      };\r\n      const response = await fetch(\r\n        process.env.REACT_APP_API + \"/MedicineBill\",\r\n        {\r\n          method: \"POST\",\r\n          headers: {\r\n            \"Content-Type\": \"application/json\",\r\n          },\r\n          body: JSON.stringify(medicinebillobject),\r\n        }\r\n      );\r\n\r\n      const billresponse = await fetch(\r\n        process.env.REACT_APP_API + \"/Bill/\" + props.patient.BillId\r\n      );\r\n      const billdata = await billresponse.json();\r\n      // console.log(billdata);\r\n      // console.log(billdata.Total_Fees);\r\n      billdata.MedicineCharges =\r\n        billdata.MedicineCharges + SelecetedMedicinePrice * Quantity;\r\n      // billdata.Total_Fees =\r\n      //   billdata.Total_Fees + SelecetedMedicinePrice * Quantity;\r\n\r\n      // console.log(billdata.Total_Fees);\r\n      console.log(billdata);\r\n      const putresponse = await fetch(\r\n        process.env.REACT_APP_API + \"/Bill/\" + props.patient.BillId,\r\n        {\r\n          method: \"PUT\",\r\n          headers: {\r\n            \"Content-Type\": \"application/json\",\r\n          },\r\n          body: JSON.stringify(billdata),\r\n        }\r\n      );\r\n      SetMessage(\"Successfully added medicine\");\r\n    } catch (error) {\r\n      SetMessage(\"Some error ocured while adding medicine\");\r\n    }\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <p>Add Medicine</p>\r\n      <div>\r\n        <table border={1}>\r\n          <thead>\r\n            <tr>\r\n              <td>\r\n                Patient Id\r\n              </td>\r\n              <td>\r\n              <label>Name :</label>\r\n           </td>\r\n           <td>\r\n              <p>MedicineList</p>\r\n              </td>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            <tr>\r\n              <td>\r\n                {props.patient.PatientId}\r\n              </td>\r\n              <td>\r\n              <p>{props.patient.FirstName}</p>\r\n              </td>\r\n              <td>\r\n              <select\r\n                className=\"form-control\"\r\n                onChange={(evt) => selectkiya(evt.target.value)}\r\n              >\r\n                {MedicineList.map((e, idx) => {\r\n                  // console.log(e);\r\n                  return (\r\n                    <option key={idx} value={e.MedicineId}>\r\n                      {e.Name}\r\n                    </option>\r\n                  );\r\n                })}\r\n              </select>\r\n              </td>\r\n            </tr>\r\n          </tbody>\r\n        </table>\r\n        {SelecetedMedicineId != 0 && (\r\n          <p>Id Of Selected Medicine: {SelecetedMedicineId}</p>\r\n        )}\r\n        {SelecetedMedicineId != 0 && (\r\n          <p>Price Of Selected Medicine: {SelecetedMedicinePrice}</p>\r\n        )}\r\n        <p>Select Quantity</p>\r\n        {SelecetedMedicineId != 0 && (\r\n          <input\r\n            type=\"number\"\r\n            onChange={(evt) => SetQuantity(evt.target.value)}\r\n          />\r\n        )}\r\n        {SelecetedMedicineId != 0 && (\r\n          <p>TotalPrice: {Quantity * SelecetedMedicinePrice}</p>\r\n        )}\r\n\r\n        {Quantity != 0 && <button onClick={submitMedicine}>Submit</button>}\r\n        {message != \"\" && <p color=\"red\">{message}</p>}\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default AddMedicineForm;\r\n","/Users/nishant/Desktop/01-starting-project/src/components/IPDPatientsList/Dischargedpatient.jsx",["138","139","140","141","142"],"import React, { useEffect, useState } from \"react\";\r\nconst DischargedPatient = (props) => {\r\n  const [Bill, SetBill] = useState([]);\r\n  const [tempBill, SettempBill] = useState([]);\r\n  const [isSeeMedicineBill, SetisSeeMedicineBill] = useState(false);\r\n  const [MedicineBill, SetMedicineBill] = useState([]);\r\n  const [isSeeCanteenBill, SetisSeeCanteenBill] = useState(false);\r\n  const [CanteenBill, SetCanteenBill] = useState([]);\r\n  async function getBill() {\r\n    const response = await fetch(\r\n      process.env.REACT_APP_API + \"/Bill/\" + props.patient.BillId\r\n    );\r\n    const billData = await response.json();\r\n    SetBill(billData);\r\n    SettempBill(billData);\r\n  }\r\n  console.log(Bill);\r\n  // const onNoOfDaysChanged = (evt) => {\r\n  //   var days = evt.target.value;\r\n  //   // SetNoOfDays(days);\r\n  //   SetBill((prevState) => {\r\n  //     return {\r\n  //       ...prevState,\r\n  //       RoomCharges: tempBill.RoomCharges * days,\r\n  //       Doctor_Fees: tempBill.Doctor_Fees * days,\r\n  //       Total_Fees: tempBill.Doctor_Fees * days,\r\n  //       // tempBill.Total_Fees +\r\n  //       // tempBill.RoomCharges * (days - 1) +\r\n  //       // tempBill.Doctor_Fees * (days - 1),\r\n  //     };\r\n  //   });\r\n  // };\r\n  async function dischargeKarDo() {\r\n    const deleteMedicineBillsresponse = await fetch(\r\n      process.env.REACT_APP_API +\r\n        \"/MedicineBill/DeleteMedicineBillsByBillId/\" +\r\n        props.patient.BillId,\r\n      {\r\n        method: \"DELETE\",\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n      }\r\n    );\r\n    const deleteCanteenBillsresponse = await fetch(\r\n      process.env.REACT_APP_API +\r\n        \"/CanteenBill/DeleteCanteenBillsByBillId/\" +\r\n        props.patient.BillId,\r\n      {\r\n        method: \"DELETE\",\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n      }\r\n    );\r\n    const deleteBillsresponse = await fetch(\r\n      process.env.REACT_APP_API + \"/Bill/\" + props.patient.BillId,\r\n      {\r\n        method: \"DELETE\",\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n      }\r\n    );\r\n    const deletePatientsresponse = await fetch(\r\n      process.env.REACT_APP_API + \"/Patient/\" + props.patient.PatientId,\r\n      {\r\n        method: \"DELETE\",\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n      }\r\n    );\r\n    props.isDis(false);\r\n  }\r\n  async function seeMedicineBillDetails() {\r\n    const response = await fetch(\r\n      process.env.REACT_APP_API +\r\n        \"/MedicineBill/MedicineBillsByBillId/\" +\r\n        props.patient.BillId\r\n    );\r\n    const medicineBillData = await response.json();\r\n    SetMedicineBill(medicineBillData);\r\n    SetisSeeMedicineBill(true);\r\n  }\r\n  async function seeCanteenBillDetails() {\r\n    const response = await fetch(\r\n      process.env.REACT_APP_API +\r\n        \"/CanteenBill/CanteenBillsByBillId/\" +\r\n        props.patient.BillId\r\n    );\r\n    const canteenBillData = await response.json();\r\n    SetCanteenBill(canteenBillData);\r\n    SetisSeeCanteenBill(true);\r\n  }\r\n  useEffect(() => {\r\n    getBill();\r\n  }, [props]);\r\n  // console.log(Bill);\r\n  return (\r\n    <div>\r\n      <p>Discharged Patient Name: {props.patient.FirstName}</p>\r\n      <p>Review Bill</p>\r\n      <p>Enter No of Days Patient stayed In hospital</p>\r\n      <input\r\n        type=\"number\"\r\n        onChange={(evt) => {\r\n          SetBill((prevState) => {\r\n            return {\r\n              ...prevState,\r\n              RoomCharges: tempBill.RoomCharges * evt.target.value,\r\n              Doctor_Fees: tempBill.Doctor_Fees * evt.target.value,\r\n              Total_Fees:\r\n                tempBill.Total_Fees +\r\n                tempBill.RoomCharges * (evt.target.value - 1) +\r\n                tempBill.Doctor_Fees * (evt.target.value - 1),\r\n            };\r\n          });\r\n        }}\r\n      />\r\n      <table border={1}>\r\n        <thead>\r\n          <tr>\r\n            <td>BillId</td>\r\n            <td>OPD_Fees</td>\r\n            <td>Doctor_Fees</td>\r\n            <td>Other_Fees</td>\r\n            <td>MedicineCharges</td>\r\n            <td>CanteenCharges</td>\r\n            <td>IPD_Advance_Fees</td>\r\n            <td>RoomCharges</td>\r\n            <td>Total_Fees</td>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          <tr>\r\n            <td>{Bill.BillId}</td>\r\n            <td>{Bill.OPD_Fees}</td>\r\n            <td>{Bill.Doctor_Fees}</td>\r\n            <td>{Bill.Other_Fees}</td>\r\n            <td>{Bill.MedicineCharges}</td>\r\n            <td>{Bill.CanteenCharges}</td>\r\n            <td>{Bill.IPD_Advance_Fees}</td>\r\n            <td>{Bill.RoomCharges}</td>\r\n            <td>{Bill.Total_Fees}</td>\r\n          </tr>\r\n        </tbody>\r\n      </table>\r\n      <button onClick={seeMedicineBillDetails}>See Medicine Details</button>\r\n      {isSeeMedicineBill === true && (\r\n        <>\r\n          <table>\r\n            <tbody>\r\n              {MedicineBill.map((e, index) => {\r\n                // console.log(e);\r\n                return (\r\n                  <tr key={index}>\r\n                    <td>{e.MedicineBillId}</td>\r\n                    <td>{e.MedicineId}</td>\r\n                    <td>{e.Quantity}</td>\r\n                    <td>{e.TotalPrice}</td>\r\n                  </tr>\r\n                );\r\n              })}\r\n            </tbody>\r\n          </table>\r\n        </>\r\n      )}\r\n      <button onClick={seeCanteenBillDetails}>See Canteen Details</button>\r\n      {isSeeCanteenBill === true && (\r\n        <>\r\n          <table>\r\n            <tbody>\r\n              {CanteenBill.map((e, index) => {\r\n                // console.log(e);\r\n                return (\r\n                  <tr key={index}>\r\n                    <td>{e.CanteenBillId}</td>\r\n                    <td>{e.FoodId}</td>\r\n                    <td>{e.Quantity}</td>\r\n                    <td>{e.TotalPrice}</td>\r\n                  </tr>\r\n                );\r\n              })}\r\n            </tbody>\r\n          </table>\r\n        </>\r\n      )}\r\n      <button onClick={() => {}}>Print Bill</button>\r\n      <button onClick={dischargeKarDo}>Confirm and Discharge Patient</button>\r\n    </div>\r\n  );\r\n};\r\nexport default DischargedPatient;\r\n","/Users/nishant/Desktop/01-starting-project/src/components/IPDPatientsList/AddFoodForm.jsx",["143","144","145","146","147","148","149","150","151","152"],"import React, { UseState, UseEffect, useEffect, useState } from \"react\";\r\n\r\nconst AddFoodForm = (props) => {\r\n  const [FoodList, SetFoodList] = useState([]);\r\n  const [SelecetedFoodId, SetSelecetedFoodId] = useState(0);\r\n  const [SelecetedFoodPrice, SetSelecetedFoodPrice] = useState(0);\r\n  const [Quantity, SetQuantity] = useState(0);\r\n  const [message, SetMessage] = useState(\"\");\r\n  async function getFoodFromStore() {\r\n    const response = await fetch(process.env.REACT_APP_API + \"/Canteen\");\r\n    const foodsdata = await response.json();\r\n    SetFoodList(foodsdata);\r\n    console.log(foodsdata);\r\n  }\r\n  useEffect(() => {\r\n    getFoodFromStore();\r\n  }, []);\r\n\r\n  const selectkiya = (foodId) => {\r\n    SetSelecetedFoodId(foodId);\r\n    for (var j = 0; j < FoodList.length; j++) {\r\n      console.log(FoodList[j].FoodId + \" => \" + foodId);\r\n      if (FoodList[j].FoodId === parseInt(foodId)) {\r\n        SetSelecetedFoodPrice(FoodList[j].Price);\r\n      }\r\n    }\r\n  };\r\n\r\n  async function submitFood(event) {\r\n    event.preventDefault();\r\n    try {\r\n      const foodbillres = await fetch(\r\n        process.env.REACT_APP_API + \"/CanteenBill\"\r\n      );\r\n      const allbill = await foodbillres.json();\r\n      var allbillids = [];\r\n      for (let i = 0; i < allbill.length; i++) {\r\n        allbillids[0] = allbill.BillId;\r\n      }\r\n\r\n      console.log();\r\n      var randomid = parseInt(Math.random() * 1000) + 1;\r\n      while (allbillids.includes(randomid)) {\r\n        randomid = parseInt(Math.random() * 1000) + 1;\r\n      }\r\n\r\n      var foodbillobject = {\r\n        CanteenBillId: randomid,\r\n        BillId: parseInt(props.patient.BillId),\r\n        FoodId: parseInt(SelecetedFoodId),\r\n        Quantity: parseInt(Quantity),\r\n        TotalPrice: parseFloat(SelecetedFoodPrice * Quantity),\r\n      };\r\n      const response = await fetch(process.env.REACT_APP_API + \"/CanteenBill\", {\r\n        method: \"POST\",\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n        body: JSON.stringify(foodbillobject),\r\n      });\r\n\r\n      const billresponse = await fetch(\r\n        process.env.REACT_APP_API + \"/Bill/\" + props.patient.BillId\r\n      );\r\n      const billdata = await billresponse.json();\r\n      // console.log(billdata);\r\n      // console.log(billdata.Total_Fees);\r\n      billdata.CanteenCharges =\r\n        billdata.CanteenCharges + SelecetedFoodPrice * Quantity;\r\n      // billdata.Total_Fees =\r\n      //   billdata.Total_Fees + SelecetedFoodPrice * Quantity;\r\n\r\n      // console.log(billdata.Total_Fees);\r\n      console.log(billdata);\r\n      const putresponse = await fetch(\r\n        process.env.REACT_APP_API + \"/Bill/\" + props.patient.BillId,\r\n        {\r\n          method: \"PUT\",\r\n          headers: {\r\n            \"Content-Type\": \"application/json\",\r\n          },\r\n          body: JSON.stringify(billdata),\r\n        }\r\n      );\r\n      SetMessage(\"Successfully added food\");\r\n    } catch (error) {\r\n      SetMessage(\"Some error ocured while adding food\");\r\n    }\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <p>Add Food</p>\r\n      <table border={1}>\r\n<tr>\r\n  <td>\r\n    Patient Id\r\n  </td>\r\n  <td>\r\n  <label>Name</label>\r\n\r\n  </td>\r\n<td>\r\n<p>FoodList</p>\r\n\r\n</td>\r\n</tr>\r\n<tr>\r\n  <td>\r\n    {props.patient.PatientId}\r\n  </td>\r\n<td>\r\n<p>{props.patient.FirstName}</p>\r\n\r\n\r\n</td>\r\n<td>\r\n<select\r\n          className=\"form-control\"\r\n          onChange={(evt) => selectkiya(evt.target.value)}\r\n        >\r\n          {FoodList.map((e, idx) => {\r\n            // console.log(e);\r\n            return (\r\n              <option key={idx} value={e.FoodId}>\r\n                {e.Name}\r\n              </option>\r\n            );\r\n          })}\r\n        </select>\r\n</td>\r\n\r\n</tr>\r\n\r\n\r\n      </table>\r\n      <div>\r\n     \r\n        {SelecetedFoodId != 0 && <p>Id Of Selected Food: {SelecetedFoodId}</p>}\r\n        {SelecetedFoodId != 0 && (\r\n          <p>Price Of Selected Food: {SelecetedFoodPrice}</p>\r\n        )}\r\n        <p>Select Quantity</p>\r\n        {SelecetedFoodId != 0 && (\r\n          <input\r\n            type=\"number\"\r\n            onChange={(evt) => SetQuantity(evt.target.value)}\r\n          />\r\n        )}\r\n        {SelecetedFoodId != 0 && (\r\n          <p>TotalPrice: {Quantity * SelecetedFoodPrice}</p>\r\n        )}\r\n\r\n        {Quantity != 0 && <button onClick={submitFood}>Submit</button>}\r\n        {message != \"\" && <p color=\"red\">{message}</p>}\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default AddFoodForm;\r\n","/Users/nishant/Desktop/01-starting-project/src/components/Reports/Reports.jsx",["153"],"/Users/nishant/Desktop/01-starting-project/src/components/Reports/DoctorByTypeComp.jsx",["154"],"/Users/nishant/Desktop/01-starting-project/src/components/Reports/PatientByDoctorComp.jsx",[],"/Users/nishant/Desktop/01-starting-project/src/components/Reports/DoctorBySpecComp.jsx",["155"],"/Users/nishant/Desktop/01-starting-project/src/components/Reports/PatientByWardComp.jsx",[],{"ruleId":"156","replacedBy":"157"},{"ruleId":"158","replacedBy":"159"},{"ruleId":"160","severity":1,"message":"161","line":2,"column":8,"nodeType":"162","messageId":"163","endLine":2,"endColumn":27},{"ruleId":"156","replacedBy":"164"},{"ruleId":"158","replacedBy":"165"},{"ruleId":"160","severity":1,"message":"166","line":10,"column":9,"nodeType":"162","messageId":"163","endLine":10,"endColumn":17},{"ruleId":"167","severity":2,"message":"168","line":8,"column":42,"nodeType":"162","endLine":8,"endColumn":50},{"ruleId":"167","severity":2,"message":"168","line":9,"column":40,"nodeType":"162","endLine":9,"endColumn":48},{"ruleId":"167","severity":2,"message":"168","line":10,"column":44,"nodeType":"162","endLine":10,"endColumn":52},{"ruleId":"156","replacedBy":"169"},{"ruleId":"158","replacedBy":"170"},{"ruleId":"160","severity":1,"message":"171","line":25,"column":9,"nodeType":"162","messageId":"163","endLine":25,"endColumn":18},{"ruleId":"160","severity":1,"message":"172","line":48,"column":9,"nodeType":"162","messageId":"163","endLine":48,"endColumn":18},{"ruleId":"160","severity":1,"message":"172","line":69,"column":9,"nodeType":"162","messageId":"163","endLine":69,"endColumn":18},{"ruleId":"160","severity":1,"message":"173","line":90,"column":7,"nodeType":"162","messageId":"163","endLine":90,"endColumn":22},{"ruleId":"160","severity":1,"message":"174","line":95,"column":7,"nodeType":"162","messageId":"163","endLine":95,"endColumn":16},{"ruleId":"160","severity":1,"message":"166","line":11,"column":9,"nodeType":"162","messageId":"163","endLine":11,"endColumn":17},{"ruleId":"160","severity":1,"message":"172","line":17,"column":9,"nodeType":"162","messageId":"163","endLine":17,"endColumn":18},{"ruleId":"160","severity":1,"message":"166","line":66,"column":13,"nodeType":"162","messageId":"163","endLine":66,"endColumn":21},{"ruleId":"160","severity":1,"message":"175","line":90,"column":13,"nodeType":"162","messageId":"163","endLine":90,"endColumn":24},{"ruleId":"176","severity":1,"message":"177","line":150,"column":30,"nodeType":"178","messageId":"179","endLine":150,"endColumn":32},{"ruleId":"176","severity":1,"message":"177","line":153,"column":30,"nodeType":"178","messageId":"179","endLine":153,"endColumn":32},{"ruleId":"176","severity":1,"message":"177","line":157,"column":30,"nodeType":"178","messageId":"179","endLine":157,"endColumn":32},{"ruleId":"176","severity":1,"message":"177","line":163,"column":30,"nodeType":"178","messageId":"179","endLine":163,"endColumn":32},{"ruleId":"176","severity":1,"message":"177","line":167,"column":19,"nodeType":"178","messageId":"179","endLine":167,"endColumn":21},{"ruleId":"176","severity":1,"message":"177","line":168,"column":18,"nodeType":"178","messageId":"179","endLine":168,"endColumn":20},{"ruleId":"160","severity":1,"message":"180","line":34,"column":11,"nodeType":"162","messageId":"163","endLine":34,"endColumn":38},{"ruleId":"160","severity":1,"message":"181","line":45,"column":11,"nodeType":"162","messageId":"163","endLine":45,"endColumn":37},{"ruleId":"160","severity":1,"message":"182","line":56,"column":11,"nodeType":"162","messageId":"163","endLine":56,"endColumn":30},{"ruleId":"160","severity":1,"message":"183","line":65,"column":11,"nodeType":"162","messageId":"163","endLine":65,"endColumn":33},{"ruleId":"184","severity":1,"message":"185","line":98,"column":6,"nodeType":"186","endLine":98,"endColumn":13,"suggestions":"187"},{"ruleId":"160","severity":1,"message":"188","line":1,"column":17,"nodeType":"162","messageId":"163","endLine":1,"endColumn":25},{"ruleId":"160","severity":1,"message":"189","line":1,"column":27,"nodeType":"162","messageId":"163","endLine":1,"endColumn":36},{"ruleId":"160","severity":1,"message":"166","line":54,"column":13,"nodeType":"162","messageId":"163","endLine":54,"endColumn":21},{"ruleId":"160","severity":1,"message":"175","line":75,"column":13,"nodeType":"162","messageId":"163","endLine":75,"endColumn":24},{"ruleId":"176","severity":1,"message":"177","line":139,"column":26,"nodeType":"178","messageId":"179","endLine":139,"endColumn":28},{"ruleId":"176","severity":1,"message":"177","line":140,"column":26,"nodeType":"178","messageId":"179","endLine":140,"endColumn":28},{"ruleId":"176","severity":1,"message":"177","line":144,"column":26,"nodeType":"178","messageId":"179","endLine":144,"endColumn":28},{"ruleId":"176","severity":1,"message":"177","line":150,"column":26,"nodeType":"178","messageId":"179","endLine":150,"endColumn":28},{"ruleId":"176","severity":1,"message":"177","line":154,"column":19,"nodeType":"178","messageId":"179","endLine":154,"endColumn":21},{"ruleId":"176","severity":1,"message":"177","line":155,"column":18,"nodeType":"178","messageId":"179","endLine":155,"endColumn":20},{"ruleId":"160","severity":1,"message":"190","line":1,"column":27,"nodeType":"162","messageId":"163","endLine":1,"endColumn":36},{"ruleId":"160","severity":1,"message":"190","line":1,"column":27,"nodeType":"162","messageId":"163","endLine":1,"endColumn":36},{"ruleId":"160","severity":1,"message":"190","line":1,"column":27,"nodeType":"162","messageId":"163","endLine":1,"endColumn":36},"no-native-reassign",["191"],"no-negated-in-lhs",["192"],"no-unused-vars","'OpdPatientComponent' is defined but never used.","Identifier","unusedVar",["191"],["192"],"'response' is assigned a value but never used.","react-hooks/rules-of-hooks","React Hook \"useState\" is called in function \"staffComponent\" that is neither a React function component nor a custom React Hook function. React component names must start with an uppercase letter. React Hook names must start with the word \"use\".",["191"],["192"],"'response2' is assigned a value but never used.","'response1' is assigned a value but never used.","'handleCalculate' is assigned a value but never used.","'handleIPD' is assigned a value but never used.","'putresponse' is assigned a value but never used.","eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","'deleteMedicineBillsresponse' is assigned a value but never used.","'deleteCanteenBillsresponse' is assigned a value but never used.","'deleteBillsresponse' is assigned a value but never used.","'deletePatientsresponse' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'getBill'. Either include it or remove the dependency array.","ArrayExpression",["193"],"'UseState' is defined but never used.","'UseEffect' is defined but never used.","'useEffect' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"194","fix":"195"},"Update the dependencies array to be: [getBill, props]",{"range":"196","text":"197"},[3102,3109],"[getBill, props]"]